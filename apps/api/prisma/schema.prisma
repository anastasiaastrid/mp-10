// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  userId        Int    @id @default(autoincrement())
  username      String @unique 
  email         String @unique
  password      String 
  cellphone     String?
  firstname     String?
  lastname      String?
  company       String?
  website       String?
  address       String?
  city          String?
  country       String?
  postalCode    String?
  state         String?
  isVerified    Boolean @default(false)
  roleId        Int 
  role          Role @relation(fields: [roleId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  referralCode  String  @unique
  referredBy    String?
  usedReferral  Boolean @default(false) 
  Points        Points[]
  Tickets       Ticket[]
  DiscountCoupons DiscountCoupon[] @relation("UserDiscounts")
  profileImage   Bytes?
}

model Role {
  id   Int     @id @default(autoincrement())
  name String  @unique
  users User[]
}

model Points {
  pointsId            Int      @id @default(autoincrement())
  pointsBalance       Int
  userId              Int
  expiryDate          DateTime
  User                User     @relation(fields: [userId], references: [userId])
  PointsExpiryDates    PointsExpiry[]
}

model PointsExpiry {
  pointsExpiryId  Int       @id @default(autoincrement())
  expiryDate      DateTime
  pointsId        Int
  Points          Points    @relation(fields: [pointsId], references: [pointsId])
}

model Event {
  eventId           Int          @id @default(autoincrement())
  eventName         String
  eventDescription  String
  organizerId       Int
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  Tickets           Ticket[]
}

model Ticket {
  ticketId         Int       @id @default(autoincrement())
  eventId          Int
  userId           Int
  ticketPrice      Float
  registerDate     DateTime
  discountCouponCode   String?
  couponExpiryDate DateTime?
  Event            Event     @relation(fields: [eventId], references: [eventId])
  User             User      @relation(fields: [userId], references: [userId])
  DiscountCoupon   DiscountCoupon? @relation("DiscountCouponTickets", fields: [discountCouponCode], references: [code])   
}

model DiscountCoupon {
  code             String    @id
  userId           Int
  discountAmount   Float
  expiryDate       DateTime
  User             User      @relation("UserDiscounts", fields: [userId], references: [userId])
Tickets          Ticket[]  @relation("DiscountCouponTickets")
}



